{"version":3,"file":"static/js/583.80676f56.chunk.js","mappings":"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","sources":["components/drawer/Profile.jsx","components/drawer/Drawer.jsx","components/chat/menu/HeaderMenu.jsx","constants/data.js","components/chat/menu/Header.jsx","components/chat/menu/Search.jsx","service/api.js","utils/common-utils.js","components/chat/menu/Conversation.jsx","components/chat/menu/Conversations.jsx","components/chat/menu/Menu.jsx","components/chat/chat/ChatHeader.jsx","components/chat/chat/Message.jsx","components/chat/chat/Footer.jsx","components/chat/chat/Messages.jsx","components/chat/chat/ChatBox.jsx","components/chat/chat/EmptyChat.jsx","components/chat/ChatDialog.jsx","components/account/LoginDialog.jsx","components/Messenger.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Box, styled, Typography } from \"@mui/material\"\r\n\r\nimport { AccountContext } from \"../../context/AccountProvider\";\r\n\r\nconst ImageContainer = styled(Box)`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Image = styled('img') ({\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: '50%',\r\n    padding: '25px 0'\r\n});\r\n\r\nconst BoxWrapper = styled(Box)`\r\n    background: #FFFFFF;\r\n    padding: 12px 30px 2px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);\r\n    & :first-child {\r\n        font-size: 13px;\r\n        color: #3887BE;\r\n        font-weight: 200;\r\n    };\r\n    & :last-child {\r\n        margin: 14px 0;\r\n        color: #4A4A4A;\r\n    }\r\n`;\r\n\r\nconst DescriptionContainer = styled(Box)`\r\n    padding: 15px 20px 28px 30px;\r\n    & > p {\r\n        color: #8696a0;\r\n        font-size: 13px;\r\n    }\r\n`;\r\n\r\nconst Profile = () => {\r\n\r\n    const { account } = useContext(AccountContext);\r\n\r\n    return (\r\n        <>\r\n            <ImageContainer>\r\n                <Image src={account.picture} alt=\"displaypicture\" />\r\n            </ImageContainer>\r\n            <BoxWrapper>\r\n                <Typography>Your name</Typography>\r\n                <Typography>{account.name}</Typography>\r\n            </BoxWrapper>\r\n            <DescriptionContainer>\r\n                <Typography>This is not your username or pin. This name will be visible to your WhatsApp contacts.</Typography>\r\n            </DescriptionContainer>\r\n            <BoxWrapper>\r\n                <Typography>About</Typography>\r\n                <Typography>Eat! Sleep! Code! Repeat</Typography>\r\n            </BoxWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { styled, Drawer, Box, Typography } from '@mui/material';\r\nimport { ArrowBack } from '@mui/icons-material';\r\n\r\n//components\r\nimport Profile from './Profile';\r\n\r\nconst Header = styled(Box)`\r\n  background: #3887BE;\r\n  height: 107px;\r\n  color: #FFFFFF;\r\n  display: flex;\r\n  & > svg, & > p {\r\n    margin-top: auto;\r\n    padding: 15px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst Component = styled(Box)`\r\n  background: #ededed;\r\n  height: 85%;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    font-size: 18px;\r\n`\r\n\r\nconst drawerStyle = {\r\n    left: 20,\r\n    top: 17,\r\n    height: '95%',\r\n    width: '30%',\r\n    boxShadow: 'none'\r\n}\r\n\r\nconst InfoDrawer = ({ open, setOpen, profile }) => {\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{ sx: drawerStyle }}\r\n            style={{ zIndex: 1500 }}\r\n        >\r\n            <Header>\r\n                <ArrowBack onClick={() => setOpen(false)} />\r\n                <Text>Profile</Text>\r\n            </Header>\r\n            <Component>\r\n                {profile && <Profile />}\r\n            </Component>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default InfoDrawer;","import { useState, useContext } from 'react';\r\n\r\nimport { MoreVert } from '@mui/icons-material';\r\nimport { Menu, MenuItem, styled } from '@mui/material';\r\n\r\nimport { googleLogout } from '@react-oauth/google';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\nimport { UserContext } from '../../../context/UserProvider';\r\n\r\nimport { clientId } from '../../../constants/data';\r\n\r\n//components\r\nimport InfoDrawer from '../../drawer/Drawer';\r\n\r\nconst MenuOption = styled(MenuItem)`\r\n    font-size: 14px;\r\n    padding: 15px 60px 5px 24px;\r\n    color: #4A4A4A;\r\n`;\r\n\r\nconst Logout = styled(googleLogout)`\r\n    border: none;\r\n    box-shadow: none;\r\n`;\r\n\r\nconst HeaderMenu = () => {\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    \r\n    const { setAccount, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\r\n    const { setPerson } = useContext(UserContext);\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setOpen(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(null);\r\n    };\r\n\r\n    const onSignoutSuccess = () => {\r\n        alert(\"You have been logged out successfully\");\r\n        console.clear();\r\n        setShowlogoutButton(false);\r\n        setShowloginButton(true);\r\n        setAccount('');\r\n        setPerson({});\r\n    };\r\n\r\n    const toggleDrawer = () => {\r\n        setOpenDrawer(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <MoreVert onClick={handleClick} />\r\n            <Menu\r\n                anchorEl={open}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                <MenuOption onClick={() => { handleClose(); toggleDrawer()}}>Profile</MenuOption>\r\n                <MenuOption onClick={() => { handleClose(); }}>\r\n                { showlogoutButton ?\r\n                    <Logout\r\n                        clientId={clientId}\r\n                        buttonText=\"Logout\"\r\n                        onLogoutSuccess={onSignoutSuccess}\r\n                    >\r\n                    </Logout> : null\r\n                }\r\n                </MenuOption>\r\n            </Menu>\r\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderMenu;","\r\nexport const clientId = '673789514417-r6t434u7aftl1j4to5e9i9i4vkc22ens.apps.googleusercontent.com';\r\nexport const iconPDF = 'https://cdn4.iconfinder.com/data/icons/logos-and-brands/512/27_Pdf_File_Type_Adobe_logo_logos-512.png';\r\nexport const defaultProfilePicture = 'https://static.straitstimes.com.sg/s3fs-public/articles/2020/12/01/af_moneyheist_011220.jpg';\r\n\r\n// export const emptyChatImage \r\n\r\nexport const emptyChatImage = 'https://i.gadgets360cdn.com/large/whatsapp_multi_device_support_update_image_1636207150180.jpg';\r\nexport const qrCodeImage = 'https://www.ginifab.com/feeds/qr_code/img/qrcode.jpg';\r\nexport const emptyProfilePicture = 'https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png';\r\n\r\n\r\n// WhatsApp Chat Background Image used in component Messages.jsx\r\n// https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png\r\n\r\n\r\n\r\n","import { useContext ,useState } from \"react\";\r\n\r\nimport { AccountContext } from \"../../../context/AccountProvider\";\r\nimport { Box , styled} from \"@mui/material\";\r\nimport { Chat as MessageIcon } from '@mui/icons-material';\r\nimport HeaderMenu from \"./HeaderMenu\";\r\n\r\nimport InfoDrawer from \"../../drawer/Drawer\"\r\n\r\nconst Component = styled(Box)`\r\n    height: 44px;\r\n    background: #ededed;\r\n    display: flex;\r\n    padding: 8px 16px;\r\n    align-items: center;\r\n`;\r\n\r\nconst Image = styled('img') ({\r\n    height: 45,\r\n    width: 45,\r\n    borderRadius: '50%'\r\n})\r\n\r\nconst Wrapper = styled(Box) `\r\n    margin-left: auto;\r\n    & > * {\r\n        margin-left: 2px;\r\n        padding: 8px;\r\n        color: #000;\r\n    };\r\n    & :first-child {\r\n        font-size: 22px;\r\n        margin-right: 8px;\r\n        margin-top: 3px;\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst Header = () =>{\r\n\r\n\r\n\tconst [openDrawer , setOpenDrawer] = useState(false);\r\n\tconst {account} = useContext(AccountContext);\r\n\r\n\tconst toggleDrawer = () => {\r\n\t\t setOpenDrawer(true);\r\n\t}\r\n\treturn (\r\n\r\n\t\t<>\r\n\t\t<Component>\r\n\t\t\t<Image src = {account.picture} alt=\"dp\"  onClick ={() => toggleDrawer()}/>\r\n\t\t\t<Wrapper>\r\n                    <MessageIcon />\r\n                    <HeaderMenu/>\r\n                </Wrapper>\r\n\r\n\t\t</Component>\r\n\t\t<InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Header;","\r\nimport { Box, InputBase, styled } from '@mui/material';\r\nimport { Search as SearchIcon } from '@mui/icons-material';\r\n\r\nconst Component = styled(Box)`\r\n    background: #fff;\r\n    height: 45px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid #F2F2F2;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n    position: relative;\r\n    border-radius: 10px;\r\n    background-color: #f0f2f5;\r\n    margin: 0 13px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Icon = styled(Box)`\r\n    color: #919191;\r\n    padding: 8px;\r\n    height: 100%;\r\n    position: absolute;\r\n`;\r\n      \r\nconst InputField = styled(InputBase) `\r\n    width: 100%;\r\n    padding: 16px;\r\n    padding-left: 65px;\r\n    font-size: 14px;\r\n    height: 15px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Search = ({ setText }) => {\r\n\r\n    return (\r\n        <Component>\r\n            <Wrapper>\r\n                <Icon>\r\n                    <SearchIcon fontSize=\"small\"/>\r\n                </Icon>\r\n                <InputField\r\n                    placeholder=\"Search or start new chat\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </Wrapper>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Search;","  \r\nimport axios from 'axios';\r\n\r\nconst url = '';\r\n\r\nexport const addUser = async (data) => {\r\n    try {\r\n        let response = await axios.post(`${url}/add`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling addUser API ', error);\r\n    }\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n        let response = await axios.get(`${url}/users`);\r\n        return response.data\r\n    } catch (error) {\r\n        console.log('Error while calling getUsers API ', error);\r\n    }\r\n}\r\n\r\nexport const setConversation = async (data) => {\r\n    try {\r\n        await axios.post(`${url}/conversation/add`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling setConversation API ', error);\r\n    }\r\n}\r\n\r\nexport const getConversation = async (users) => {\r\n    try {\r\n        let response = await axios.post(`${url}/conversation/get`, users);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getConversation API ', error);\r\n    }\r\n}\r\n\r\nexport const getMessages = async (id) => {\r\n    try {\r\n        let response = await axios.get(`${url}/message/get/${id}`);\r\n        return response.data\r\n    } catch (error) {\r\n        console.log('Error while calling getMessages API ', error);\r\n    }\r\n}\r\n\r\nexport const newMessages = async (data) => {\r\n    try {\r\n        return await axios.post(`${url}/message/add`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling newConversations API ', error);\r\n    }\r\n}\r\n\r\nexport const uploadFile = async (data) => {\r\n    try {\r\n        return await axios.post(`${url}/file/upload`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling newConversations API ', error);\r\n    }\r\n}","\r\n\r\nexport const downloadMedia = async (e, originalImage) => {\r\n    e.preventDefault();\r\n    try {\r\n        fetch(originalImage)\r\n        .then(resp => resp.blob())\r\n        .then(blob => {\r\n            const url = window.URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.style.display = 'none';\r\n            a.href = url;\r\n\r\n            const nameSplit = originalImage.split(\"/\");\r\n            const duplicateName = nameSplit.pop();\r\n\r\n            // the filename you want\r\n            a.download = \"\" + duplicateName + \"\";\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n        })\r\n        .catch((error) => console.log('Error while downloading the image ', error))\r\n\r\n    } catch (error) {\r\n        console.log('Error while downloading the image ', error);\r\n    }\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n    const hours = new Date(date).getHours();\r\n    const minutes = new Date(date).getMinutes();\r\n    return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\r\n}","import { useContext, useEffect, useState } from 'react';\r\n\r\nimport { styled, Box, Typography } from \"@mui/material\";\r\n\r\nimport { UserContext } from '../../../context/UserProvider';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\nimport { setConversation, getConversation } from '../../../service/api';\r\nimport { emptyProfilePicture } from '../../../constants/data';\r\nimport { formatDate } from '../../../utils/common-utils';\r\n\r\nconst Component = styled(Box)`\r\n    height: 45px;\r\n    display: flex;\r\n    padding: 13px 0;\r\n    cursor: pointer;\r\n`;\r\n    \r\nconst Image = styled('img') ({\r\n    width: 50,\r\n    height: 50,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%',\r\n    padding: '0 14px'\r\n});\r\n\r\nconst Container = styled(Box)`\r\n    display: flex;\r\n`;\r\n\r\nconst Timestamp = styled(Typography)`\r\n    font-size: 12px;\r\n    margin-left: auto;\r\n    color: #00000099;\r\n    margin-right: 20px;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    display: block;\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-size: 14px;\r\n`;\r\n\r\nconst Conversation = ({ user }) => {\r\n    const url = user.picture || emptyProfilePicture;\r\n    \r\n    const { setPerson } = useContext(UserContext);\r\n    const { account, newMessageFlag }  = useContext(AccountContext);\r\n\r\n    const [message, setMessage] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getConversationMessage = async() => {\r\n            const data = await getConversation({ senderId: account.sub, receiverId: user.sub });\r\n            setMessage({ text: data?.message, timestamp: data?.updatedAt });\r\n        }\r\n        getConversationMessage();\r\n    }, [account.sub, newMessageFlag, user.sub]);\r\n\r\n    const getUser = async () => {\r\n        setPerson(user);\r\n        await setConversation({ senderId: account.sub, receiverId: user.sub });\r\n    }\r\n\r\n    return (\r\n        <Component onClick={() => getUser()}>\r\n            <Box>\r\n                <Image src={url} alt=\"display picture\" />\r\n            </Box>\r\n            <Box style={{width: '100%'}}>\r\n                <Container>\r\n                    <Typography>{user.name}</Typography>\r\n                    { \r\n                        message?.text && \r\n                        <Timestamp>{formatDate(message?.timestamp)}</Timestamp>        \r\n                    }\r\n                </Container>\r\n                <Box>\r\n                    <Text>{message?.text?.includes('') ? 'media' : message.text}</Text>\r\n                </Box>\r\n            </Box>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Conversation;","import { useState, useEffect, useContext } from 'react';\r\n\r\nimport { Box, styled, Divider } from '@mui/material';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\n//components\r\nimport Conversation from './Conversation';\r\nimport { getUsers } from '../../../service/api';\r\n\r\nconst Component = styled(Box)`\r\n    overflow: overlay;\r\n    height: 81vh;\r\n`;\r\n\r\nconst StyledDivider = styled(Divider)`\r\n    margin: 0 0 0 70px;\r\n    background-color: #e9edef;\r\n    opacity: .6;\r\n`;\r\n\r\nconst Conversations = ({ text }) => {\r\n    const [users, setUsers] = useState([]);\r\n    \r\n    const { account, socket, setActiveUsers } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let data = await getUsers();\r\n            let fiteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\r\n            setUsers(fiteredData);\r\n        }\r\n        fetchData();\r\n    }, [text]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit('addUser', account);\r\n        socket.current.on(\"getUsers\", users => {\r\n            setActiveUsers(users);\r\n        })\r\n    }, [account, setActiveUsers, socket])\r\n\r\n    return (\r\n        <Component>\r\n            {\r\n                users && users.map((user, index) => (\r\n                    user.sub !== account.sub && \r\n                        <>\r\n                            <Conversation user={user} />\r\n                            {\r\n                                users.length !== (index + 1)  && <StyledDivider />\r\n                            }\r\n                        </>\r\n                ))\r\n            }\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Conversations;","import { useState } from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\n//components\r\nimport Header from './Header';\r\nimport Search from './Search';\r\nimport Conversations from './Conversations';\r\n\r\nconst Menu = () => {\r\n    const [text, setText] = useState('');\r\n    \r\n    return (\r\n        <Box>\r\n            <Header/>\r\n            <Search setText={setText} />\r\n            <Conversations text={text} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Menu;","import { useContext } from 'react';\r\n\r\nimport { Box, Typography, styled } from '@mui/material';\r\nimport { Search, MoreVert } from '@mui/icons-material';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\nimport { defaultProfilePicture } from '../../../constants/data';\r\n\r\nconst Header = styled(Box)`\r\n    height: 44px;\r\n    background: #ededed;\r\n    display: flex;\r\n    padding: 8px 16px;\r\n    align-items: center;\r\n`;\r\n    \r\nconst Image = styled('img')({\r\n    width: 40,\r\n    height: 40,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%'\r\n})\r\n\r\nconst Name = styled(Typography)`\r\n    margin-left: 12px !important;\r\n`;\r\n\r\nconst RightContainer = styled(Box)`\r\n    margin-left: auto;\r\n    & > svg {\r\n        padding: 8px;\r\n        font-size: 22px;\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst Status = styled(Typography)`\r\n    font-size: 12px !important;\r\n    color: rgb(0, 0, 0, 0.6);\r\n    margin-left: 12px !important;\r\n`;\r\n\r\nconst ChatHeader = ({ person }) => {  \r\n\r\n    const url = person.picture || defaultProfilePicture;\r\n    \r\n    const { activeUsers } = useContext(AccountContext);\r\n\r\n    return (\r\n        <Header>\r\n            <Image src={url} alt=\"display picture\" />     \r\n            <Box>\r\n                <Name>{person.name}</Name>\r\n                <Status>{activeUsers?.find(user => user.sub === person.sub) ? 'Online' : 'Offline'}</Status>    \r\n            </Box>   \r\n            <RightContainer>\r\n                <Search />\r\n                <MoreVert />    \r\n            </RightContainer> \r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default ChatHeader;","import { useContext } from 'react';\r\n\r\nimport { Box, styled, Typography } from '@mui/material';\r\nimport { GetApp as GetAppIcon } from '@mui/icons-material';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\nimport { downloadMedia, formatDate } from '../../../utils/common-utils';\r\nimport { iconPDF } from '../../../constants/data';\r\n\r\nconst Wrapper = styled(Box)`\r\n    background: #FFFFFF;\r\n    padding: 5px;\r\n    max-width: 60%;\r\n    width: fit-content;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    word-break: break-word;\r\n`;\r\n    \r\nconst Own = styled(Box)`\r\n    background: #dcf8c6;\r\n    padding: 5px;\r\n    max-width: 60%;\r\n    width: fit-content;\r\n    margin-left: auto;\r\n    display: flex;\r\n    border-radius: 10px;\r\n    word-break: break-word;\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    font-size: 14px;\r\n    padding: 0 25px 0 5px;\r\n`;\r\n\r\nconst Time = styled(Typography)`\r\n    font-size: 10px;\r\n    color: #919191;\r\n    margin-top: 6px;\r\n    word-break: keep-all;\r\n    margin-top: auto;\r\n`;\r\n\r\nconst Message = ({ message }) => {\r\n    const { account } = useContext(AccountContext);\r\n\r\n    return (\r\n        <>\r\n        {\r\n            account.sub === message.senderId ? \r\n                <Own>\r\n                    {\r\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\r\n                    }\r\n                </Own>\r\n            : \r\n                <Wrapper>\r\n                    {\r\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\r\n                    }\r\n                </Wrapper>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nconst TextMessage = ({ message }) => {\r\n    \r\n    return (\r\n        <>\r\n            <Text>{message.text}</Text>\r\n            <Time>{formatDate(message.createdAt)}</Time>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ImageMessage = ({ message }) => {\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            {\r\n                message?.text?.includes('.pdf') ?\r\n                    <div style={{ display: 'flex' }}>\r\n                        <img src={iconPDF} alt=\"pdf-icon\" style={{ width: 80 }} />\r\n                        <Typography style={{ fontSize: 14 }} >{message.text.split(\"/\").pop()}</Typography>\r\n                    </div>\r\n                : \r\n                    <img style={{ width: 300, height: '100%', objectFit: 'cover' }} src={message.text} alt={message.text} />\r\n            }\r\n            <Time style={{ position: 'absolute', bottom: 0, right: 0 }}>\r\n                <GetAppIcon \r\n                    onClick={(e) => downloadMedia(e, message.text)} \r\n                    fontSize='small' \r\n                    style={{ marginRight: 10, border: '1px solid grey', borderRadius: '50%' }} \r\n                />\r\n                {formatDate(message.createdAt)}\r\n            </Time>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import { useEffect } from 'react';\r\n\r\nimport { EmojiEmotions, AttachFile, Mic } from '@mui/icons-material';\r\nimport { Box, styled, InputBase } from '@mui/material';\r\n\r\nimport { uploadFile } from '../../../service/api';\r\n\r\nconst Container = styled(Box)`\r\n    height: 55px;\r\n    background: #ededed;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n    &  > * {\r\n        margin: 5px;\r\n        color: #919191;\r\n    }\r\n`;\r\n\r\nconst Search = styled(Box)`\r\n    border-radius: 18px;\r\n    background-color: #FFFFFF;\r\n    width: calc(94% - 100px);\r\n`;\r\n\r\nconst InputField = styled(InputBase)`\r\n    width: 100%;\r\n    padding: 20px;\r\n    padding-left: 25px;\r\n    font-size: 14px;\r\n    height: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nconst ClipIcon = styled(AttachFile)`\r\n    transform: 'rotate(40deg)'\r\n`;\r\n\r\n\r\nconst Footer = ({ sendText, value, setValue, setFile, file, setImage }) => {\r\n\r\n    useEffect(() => {\r\n        const getImage = async () => {\r\n            if (file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n\r\n                const response = await uploadFile(data);\r\n                setImage(response.data);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [file, setImage])\r\n\r\n    const onFileChange = (e) => {\r\n        setValue(e.target.files[0].name);\r\n        setFile(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <EmojiEmotions />\r\n            <label htmlFor=\"fileInput\">\r\n                <ClipIcon />\r\n            </label>\r\n            <input\r\n                type='file'\r\n                id=\"fileInput\"\r\n                style={{ display: 'none' }}\r\n                onChange={(e) => onFileChange(e)}\r\n            />\r\n\r\n            <Search>\r\n                <InputField\r\n                    placeholder=\"Type a message\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    onKeyPress={(e) => sendText(e)}\r\n                    value={value}\r\n                />\r\n            </Search>\r\n            <Mic />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Box, styled } from '@mui/material';\r\n\r\nimport { io } from 'socket.io-client';\r\n\r\nimport { getMessages, newMessages } from '../../../service/api';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\n//components\r\nimport Message from './Message';\r\nimport Footer from './Footer';\r\n\r\nconst Wrapper = styled(Box)`\r\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\r\n    background-size: 50%;\r\n`;\r\n\r\nconst StyledFooter = styled(Box)`\r\n    height: 55px;\r\n    background: #ededed;\r\n    \r\n    width: 100%;\r\n  \r\n`;\r\n    \r\nconst Component = styled(Box)`\r\n    height: 80vh;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 1px 80px;\r\n`;\r\n\r\n\r\n\r\nconst Messages = ({ person, conversation }) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [incomingMessage, setIncomingMessage] = useState(null);\r\n    const [value, setValue] = useState();\r\n    const [file, setFile] = useState();\r\n    const [image, setImage] = useState();\r\n\r\n    const scrollRef = useRef();\r\n\r\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        socket.current.on('getMessage', data => {\r\n            setIncomingMessage({\r\n                ...data,\r\n                createdAt: Date.now()\r\n            })\r\n        })\r\n    }, [socket]);\r\n    \r\n    useEffect(() => {\r\n        const getMessageDetails = async () => {\r\n            let data = await getMessages(conversation?._id);\r\n            setMessages(data);\r\n        }\r\n        getMessageDetails();\r\n    }, [conversation?._id, person._id, newMessageFlag]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        incomingMessage && conversation?.members?.includes(incomingMessage.senderId) && \r\n            setMessages((prev) => [...prev, incomingMessage]);\r\n        \r\n    }, [incomingMessage, conversation]);\r\n\r\n    const receiverId = conversation?.members?.find(member => member !== account.sub);\r\n    \r\n    const sendText = async (e) => {\r\n        let code = e.keyCode || e.which;\r\n        if(!value) return;\r\n\r\n        if(code === 13) { \r\n            let message = {};\r\n            if (!file) {\r\n                message = {\r\n                    senderId: account.sub,\r\n                    receiverId: receiverId,\r\n                    conversationId: conversation._id,\r\n                    type: 'text',\r\n                    text: value\r\n                };\r\n            } else {\r\n                message = {\r\n                    senderId: account.sub,\r\n                    conversationId: conversation._id,\r\n                    receiverId: receiverId,\r\n                    type: 'file',\r\n                    text: image\r\n                };\r\n            }\r\n\r\n            socket.current.emit('sendMessage', message);\r\n\r\n            await newMessages(message);\r\n\r\n            setValue('');\r\n            setFile();\r\n            setImage('');\r\n            setNewMessageFlag(prev => !prev);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Component>\r\n                {\r\n                    messages && messages.map(message => (\r\n                        <Container ref={scrollRef}>\r\n                            <Message message={message} />\r\n                        </Container>\r\n                    ))\r\n                }\r\n            </Component>\r\n            <Footer \r\n                sendText={sendText} \r\n                value={value} \r\n                setValue={setValue} \r\n                setFile={setFile} \r\n                file={file} \r\n                setImage={setImage}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Messages;","import { useContext, useState, useEffect } from 'react';\r\n\r\nimport { Box } from '@mui/material';\r\n\r\nimport { UserContext } from '../../../context/UserProvider';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\nimport { getConversation } from '../../../service/api';\r\n\r\n//components\r\nimport ChatHeader from './ChatHeader';\r\nimport Messages from './Messages';\r\n\r\nconst ChatBox = () => {\r\n    const { person } = useContext(UserContext);\r\n    const { account } = useContext(AccountContext);\r\n\r\n    const [conversation, setConversation] = useState({});\r\n    \r\n    useEffect(() => {\r\n        const getConversationDetails = async () => {\r\n            let data = await getConversation({ senderId: account.sub, receiverId: person.sub });\r\n            setConversation(data);\r\n        }\r\n        getConversationDetails();\r\n    }, [account.sub, person.sub]);\r\n\r\n    return (\r\n        <Box style={{height: '75%'}}>\r\n            <ChatHeader person={person} />\r\n            <Messages person={person} conversation={conversation} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatBox;","\r\nimport { Box, styled, Typography, Divider } from '@mui/material';\r\n\r\nimport { emptyChatImage } from '../../../constants/data';\r\n\r\nconst Component = styled(Box)`\r\n    background: #f8f9fa;\r\n    padding: 30px 0;\r\n    text-align: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 0 200px;\r\n`;\r\n    \r\nconst Image = styled('img')({\r\n    marginTop: 100,\r\n    width: 400\r\n})\r\n   \r\nconst Title = styled(Typography)`\r\n    font-size: 32px;\r\n    font-family: inherit;\r\n    font-weight: 300;\r\n    color: #41525d;\r\n    margin-top: 25px 0 10px 0;\r\n`;\r\n\r\nconst SubTitle = styled(Typography)`\r\n    font-size: 14px;\r\n    color: #667781;\r\n    font-weight: 400;\r\n    font-family: inherit;\r\n`;\r\n\r\nconst StyledDivider = styled(Divider)`\r\n    margin: 40px 0;\r\n    opacity: 0.4;\r\n`;\r\n\r\nconst EmptyChat = () => {\r\n    \r\n    return (\r\n        <Component>\r\n            <Container>\r\n                <Image src={emptyChatImage} alt=\"empty\" />\r\n                <Title>SwiftTalk Web</Title>\r\n                <SubTitle>Now send and receive messages without keeping your phone online.</SubTitle>\r\n                <SubTitle>Use SwiftTalk on up to 4 linked devices and 1 phone at the same time. </SubTitle>\r\n                <StyledDivider />\r\n            </Container>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default EmptyChat;","import { useContext } from 'react';\r\nimport { Dialog, styled, Box } from '@mui/material';\r\n\r\nimport { UserContext } from '../../context/UserProvider';\r\n\r\n//components\r\nimport Menu from './menu/Menu';\r\nimport ChatBox from './chat/ChatBox';\r\nimport EmptyChat from './chat/EmptyChat';\r\n\r\nconst Component = styled(Box)`\r\n    display: flex;\r\n`;\r\n    \r\nconst LeftComponent = styled(Box)`\r\n    min-width: 450px;\r\n`;\r\n    \r\nconst RightComponent = styled(Box)`\r\n    width: 73%;\r\n    min-width: 300px;\r\n    height: 100%;\r\n    border-left: 1px solid rgba(0, 0, 0, 0.14);\r\n`;\r\n\r\nconst dialogStyle = {\r\n    height: '95%',\r\n    width: '100%',\r\n    margin: '20px',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst ChatDialog = () => {\r\n\r\n    const { person } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Dialog \r\n            open={true} \r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n            PaperProps={{ sx: dialogStyle }}\r\n            maxWidth={'md'}\r\n        >\r\n            <Component>\r\n                <LeftComponent>\r\n                    <Menu/>\r\n                </LeftComponent>\r\n                <RightComponent>\r\n                    {\r\n                        Object.keys(person).length  ? <ChatBox/> : <EmptyChat />\r\n                    }\r\n                </RightComponent>\r\n            </Component>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ChatDialog;","import { useContext } from 'react';\r\n\r\nimport { Dialog, Typography, List, ListItem, Box, styled } from '@mui/material';\r\n\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\nimport { addUser } from '../../service/api';\r\nimport { AccountContext } from '../../context/AccountProvider';\r\nimport { qrCodeImage } from '../../constants/data';\r\n\r\nconst Component = styled(Box)`\r\n    display: flex; \r\n    \r\n`;\r\n\r\nconst Container = styled(Box)`\r\n    padding: 56px 0 56px 56px;\r\n`;\r\n\r\nconst QRCOde = styled('img')({\r\n    margin: '50px 10px 0 50px',\r\n    height: 264,\r\n    width: 264\r\n});\r\n\r\nconst Title = styled(Typography)`\r\n    font-size: 26px;\r\n    margin-bottom: 25px;\r\n    color: #525252;\r\n    font-family: Segoe UI,Helvetica Neue,Helvetica,Lucida Grande,Arial,Ubuntu,Cantarell,Fira Sans,sans-serif;\r\n    font-weight: 300;\r\n`;\r\n\r\nconst StyledList = styled(List)`\r\n    &  > li {\r\n        padding: 0;\r\n        margin-top: 15px;\r\n        font-size: 18px;\r\n        line-height: 28px;\r\n        color: #4a4a4a;\r\n    }\r\n`;\r\n\r\nconst dialogStyle = {\r\n    marginTop: '12%',\r\n    height: '95%',\r\n    width: '60%',\r\n    maxWidth: '100',\r\n    maxHeight: '100%',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    overflow: 'hidden'\r\n}\r\n\r\nconst LoginDialog = () => {\r\n\r\n    const { setAccount } = useContext(AccountContext);\r\n\r\n    const onLoginSuccess =  async(res) => {\r\n        let decoded = jwtDecode(res.credential);\r\n\t\tconsole.log(decoded);\r\n        setAccount(decoded);\r\n        // setShowloginButton(false);\r\n        // setShowlogoutButton(true);\r\n        await addUser(decoded);\r\n    };\r\n\r\n    const onLoginFailure = (res) => {\r\n        console.log('Login Failed:', res);\r\n    };\r\n\r\n    // const onSignoutSuccess = () => {\r\n    //     alert(\"You have been logged out successfully\");\r\n    //     console.clear();\r\n    //     setShowloginButton(true);\r\n    //     setShowlogoutButton(false);\r\n    // };\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n\t\t\thideBackdrop = {true}\r\n            // BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n            // maxWidth={'md'}\r\n            PaperProps={{ sx: dialogStyle }}\r\n        >\r\n            <Component>\r\n                <Container>\r\n                    <Title>To use SwiftTalk on your computer:</Title>\r\n                    <StyledList>\r\n                        <ListItem>1. Open SwiftTalk on your phone</ListItem>\r\n                        <ListItem>2. Tap Menu Settings and select SwiftTalk Web</ListItem>\r\n                        <ListItem>3. Point your phone to this screen to capture the code</ListItem>\r\n                    </StyledList>\r\n                </Container>\r\n                <Box style={{position:'relative'}}>\r\n                    <QRCOde src={qrCodeImage} alt=\"QR Code\" />\r\n                    <Box style={{position: 'absolute', top: '50%', transform: 'translateX(25%) translateY(-25%)'}}>\r\n                        \r\n                            <GoogleLogin\r\n                                // buttonText=\"\"\r\n                                onSuccess={onLoginSuccess}\r\n                                onError={onLoginFailure}\r\n                            />\r\n                    </Box>\r\n                </Box>\r\n            </Component>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default LoginDialog;","import { useContext } from 'react';\r\nimport { AppBar, Toolbar, styled, Box } from '@mui/material';\r\n\r\nimport { AccountContext } from '../context/AccountProvider';\r\n\r\n//components\r\nimport ChatDialog from './chat/ChatDialog';\r\nimport LoginDialog from './account/LoginDialog';\r\n\r\nconst Component = styled(Box)`\r\n    height: 100vh;\r\n    background: #DCDCDC;\r\n`;\r\n\r\nconst Header = styled(AppBar)`\r\n    background-color: #3887BE;\r\n    height: 125px;\r\n    box-shadow: none;\r\n`;\r\n    \r\nconst LoginHeader = styled(AppBar)`\r\n    background: #52D3D8;\r\n    height: 200px;\r\n    box-shadow: none;\r\n`;\r\n\r\nconst Messenger = () => {\r\n    const { account } = useContext(AccountContext);\r\n    \r\n    return (\r\n        <Component>\r\n            {\r\n                account ? \r\n                <>\r\n                    <Header>\r\n                        <Toolbar></Toolbar>\r\n                    </Header>\r\n                    <ChatDialog />\r\n                </>\r\n                :\r\n                <>\r\n                    <LoginHeader>\r\n                        <Toolbar></Toolbar>\r\n                    </LoginHeader>\r\n                    <LoginDialog />\r\n                </>\r\n            }\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Messenger;"],"names":["ImageContainer","styled","Box","_templateObject","_taggedTemplateLiteral","Image","width","height","borderRadius","padding","BoxWrapper","_templateObject2","DescriptionContainer","_templateObject3","Profile","account","useContext","AccountContext","_jsxs","_Fragment","children","_jsx","src","picture","alt","Typography","name","Header","Component","Text","drawerStyle","left","top","boxShadow","_ref","open","setOpen","profile","Drawer","onClose","handleClose","PaperProps","sx","style","zIndex","ArrowBack","onClick","MenuOption","MenuItem","Logout","googleLogout","HeaderMenu","useState","openDrawer","setOpenDrawer","setAccount","setShowloginButton","showlogoutButton","setShowlogoutButton","setPerson","UserContext","MoreVert","event","currentTarget","Menu","anchorEl","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","clientId","buttonText","onLogoutSuccess","onSignoutSuccess","alert","console","clear","InfoDrawer","Wrapper","MessageIcon","Icon","InputField","InputBase","_templateObject4","setText","SearchIcon","fontSize","placeholder","inputProps","onChange","e","target","value","url","setConversation","async","axios","post","concat","data","error","log","getConversation","users","formatDate","date","hours","Date","getHours","minutes","getMinutes","objectFit","Container","Timestamp","_message$text","user","newMessageFlag","message","setMessage","useEffect","senderId","sub","receiverId","text","timestamp","updatedAt","getConversationMessage","getUser","includes","StyledDivider","Divider","setUsers","socket","setActiveUsers","fiteredData","get","getUsers","filter","toLowerCase","fetchData","current","emit","on","map","index","Conversation","length","Search","Conversations","Name","RightContainer","Status","person","activeUsers","find","Own","Time","TextMessage","_ref2","createdAt","ImageMessage","_ref3","position","display","split","pop","bottom","right","GetAppIcon","originalImage","preventDefault","fetch","then","resp","blob","window","URL","createObjectURL","a","document","createElement","href","duplicateName","download","body","appendChild","click","revokeObjectURL","catch","downloadMedia","marginRight","border","type","ClipIcon","AttachFile","sendText","setValue","setFile","file","setImage","FormData","append","response","uploadFile","getImage","EmojiEmotions","htmlFor","id","files","onFileChange","onKeyPress","Mic","_conversation$members2","conversation","messages","setMessages","incomingMessage","setIncomingMessage","image","scrollRef","useRef","setNewMessageFlag","now","getMessages","_id","getMessageDetails","_scrollRef$current","scrollIntoView","transition","_conversation$members","members","prev","member","ref","Message","Footer","code","keyCode","which","conversationId","newMessages","ChatBox","getConversationDetails","ChatHeader","Messages","marginTop","Title","SubTitle","_templateObject5","EmptyChat","LeftComponent","RightComponent","dialogStyle","margin","maxWidth","maxHeight","overflow","ChatDialog","Dialog","BackdropProps","backgroundColor","Object","keys","QRCOde","StyledList","List","LoginDialog","hideBackdrop","ListItem","transform","GoogleLogin","onSuccess","decoded","jwtDecode","res","credential","addUser","onError","AppBar","LoginHeader","Messenger","Toolbar"],"sourceRoot":""}